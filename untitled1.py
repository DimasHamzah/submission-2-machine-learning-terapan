# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zphxVQaWXV-rVXh6yeov6RLmfnHJLzAB
"""

import pandas as pd 

data = pd.read_csv('vgsales.csv')
data = data.drop(columns=['Year', 'NA_Sales', 'JP_Sales', 'Other_Sales', 'Global_Sales', 'EU_Sales', 'Platform', 'Publisher'], axis=1)
data

data.describe()

print(len(data))

data.info()

data.isnull().sum()

data_clean = data.dropna()
data_clean

data_clean.isnull().sum()

len(data_clean['Rank'])

data_clean.Name.unique()

data_clean.Genre.unique()

preparation = data_clean.drop_duplicates('Rank')
preparation

data_game = preparation
data_game.sample(5)

from sklearn.feature_extraction.text import TfidfVectorizer

# inisalisasi tfidvectorizer
tf = TfidfVectorizer()

# melakukan perhitungan idf pada data cuisine
tf.fit(data_game['Genre'])

# mapping array dari fitur index integer ke fitur name
tf.get_feature_names()

tfidf_matrix = tf.fit_transform(data_game['Genre'])

tfidf_matrix.shape

tfidf_matrix.todense()

pd.DataFrame(
    tfidf_matrix.todense(),
    columns=tf.get_feature_names(),
    index=data_game.Name
).sample(22, axis=0)

from sklearn.metrics.pairwise import cosine_similarity


cosine_sim = cosine_similarity(tfidf_matrix)
cosine_sim

cosine_sim_df = pd.DataFrame(cosine_sim, index=data_game['Name'], columns=data_game['Name'])
print('Shape: ', cosine_sim_df.shape)

cosine_sim_df.sample(5, axis=1).sample(10, axis=0)

import numpy as np

def game_recommendations(nama_game, similarity_data=cosine_sim_df, items=data_game[['Name', 'Genre']], k=15):

    index = similarity_data.loc[:,nama_game].to_numpy().argpartition(
        range(-1, -k, -1))
    

    closest = similarity_data.columns[index[-1:-(k+2):-1]]
    closest = closest.drop(nama_game, errors='ignore')
 
    return pd.DataFrame(closest).merge(items).head(k)

data_game[data_game.Name.eq('Spirits & Spells')]

data_game.info()

game_recommendations('Know How 2')